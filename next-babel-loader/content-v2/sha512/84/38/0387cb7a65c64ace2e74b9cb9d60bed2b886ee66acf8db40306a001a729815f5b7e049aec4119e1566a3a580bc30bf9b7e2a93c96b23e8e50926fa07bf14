{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (false) {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;","map":{"version":3,"sources":["c:/inetpub/wwwroot/www.craon.it/components/hooks/windowDimension.js"],"names":["useState","useEffect","dynamic","useWindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,SAASC,aAAT,GAAyB;AACvB;AACA;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC;AAC3CM,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,eAAmC;AACjC;AACA,eAASQ,YAAT,GAAwB;AACtB;AACAJ,QAAAA,aAAa,CAAC;AACZC,UAAAA,KAAK,EAAEI,MAAM,CAACC,UADF;AAEZH,UAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,SAAD,CAAb;AAID,OARgC,CAUjC;;;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXiC,CAajC;;AACAA,MAAAA,YAAY,GAdqB,CAgBjC;;AACA,aAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD;AACF,GArBQ,EAqBN,EArBM,CAAT,CARuB,CA6Bf;;AACR,SAAOL,UAAP;AACD;;AAED,eAAeD,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== 'undefined') {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n    \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n     \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n    \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default useWindowSize;"]},"metadata":{},"sourceType":"module"}