{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js\";\nimport React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\";\nimport PropTypes from \"prop-types\";\nimport AnimatedNumber from 'react-animated-number';\n\nconst InfoNumberText = ({\n  number,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.infoNumber,\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoText,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\nInfoNumberText.propTypes = {\n  number: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nfunction animateValue(obj, start, end, duration) {\n  let startTimestamp = null;\n\n  const step = timestamp => {\n    if (!startTimestamp) startTimestamp = timestamp;\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n    obj.innerHTML = Math.floor(progress * (end - start) + start);\n\n    if (progress < 1) {\n      window.requestAnimationFrame(step);\n    }\n  };\n\n  window.requestAnimationFrame(step);\n}\n\nconst obj = document.getElementById(\"value\");\nanimateValue(obj, 100, 0, 5000);\nexport default InfoNumberText;","map":{"version":3,"sources":["/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js"],"names":["React","classes","PropTypes","AnimatedNumber","InfoNumberText","number","text","container","infoNumber","infoText","propTypes","string","isRequired","animateValue","obj","start","end","duration","startTimestamp","step","timestamp","progress","Math","min","innerHTML","floor","window","requestAnimationFrame","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAoB;AAGvC,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACM,SAAxB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEN,OAAO,CAACO,UAAvB;AAAA,gBAEGH;AAFH;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,SAAS,EAAEJ,OAAO,CAACQ,QAAzB;AAAA,gBAAoCH;AAApC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;;AAeAF,cAAc,CAACM,SAAf,GAA2B;AACvBL,EAAAA,MAAM,EAAEH,SAAS,CAACS,MAAV,CAAiBC,UADF;AAEvBN,EAAAA,IAAI,EAAEJ,SAAS,CAACS,MAAV,CAAiBC;AAFA,CAA3B;;AAQA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuCC,QAAvC,EAAiD;AAC/C,MAAIC,cAAc,GAAG,IAArB;;AACA,QAAMC,IAAI,GAAIC,SAAD,IAAe;AAC1B,QAAI,CAACF,cAAL,EAAqBA,cAAc,GAAGE,SAAjB;AACrB,UAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACH,SAAS,GAAGF,cAAb,IAA+BD,QAAxC,EAAkD,CAAlD,CAAjB;AACAH,IAAAA,GAAG,CAACU,SAAJ,GAAgBF,IAAI,CAACG,KAAL,CAAWJ,QAAQ,IAAIL,GAAG,GAAGD,KAAV,CAAR,GAA2BA,KAAtC,CAAhB;;AACA,QAAIM,QAAQ,GAAG,CAAf,EAAkB;AAChBK,MAAAA,MAAM,CAACC,qBAAP,CAA6BR,IAA7B;AACD;AACF,GAPD;;AAQAO,EAAAA,MAAM,CAACC,qBAAP,CAA6BR,IAA7B;AACD;;AAED,MAAML,GAAG,GAAGc,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACAhB,YAAY,CAACC,GAAD,EAAM,GAAN,EAAW,CAAX,EAAc,IAAd,CAAZ;AAEA,eAAeV,cAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\"\nimport PropTypes from \"prop-types\";\nimport AnimatedNumber from 'react-animated-number';\n\nconst InfoNumberText = ({number, text}) => {\n   \n    \n    return(\n        <div className={classes.container}>            \n            <h3 className={classes.infoNumber} >\n                 \n              {number}\n            </h3>\n            <div  className={classes.infoText}>{text}\n            </div>      \n        </div>\n    );\n}\n \nInfoNumberText.propTypes = {\n    number: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,  \n  \n};\n\n\n \nfunction animateValue(obj, start, end, duration) {\n  let startTimestamp = null;\n  const step = (timestamp) => {\n    if (!startTimestamp) startTimestamp = timestamp;\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n    obj.innerHTML = Math.floor(progress * (end - start) + start);\n    if (progress < 1) {\n      window.requestAnimationFrame(step);\n    }\n  };\n  window.requestAnimationFrame(step);\n}\n\nconst obj = document.getElementById(\"value\");\nanimateValue(obj, 100, 0, 5000);\n\nexport default InfoNumberText;\n\n "]},"metadata":{},"sourceType":"module"}