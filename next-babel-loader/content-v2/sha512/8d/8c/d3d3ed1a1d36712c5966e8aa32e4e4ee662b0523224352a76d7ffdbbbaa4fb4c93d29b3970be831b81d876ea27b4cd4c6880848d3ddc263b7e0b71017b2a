{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fraan\\\\Documents\\\\craonsite-modifiche_giugno\\\\components\\\\form-assistenza\\\\form-assistenza.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./form-assistenza.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"components/buttons/Button\";\nimport { FormControlLabel, TextareaAutosize, Checkbox } from \"@material-ui/core\";\nimport Link from 'next/link';\nimport axios from \"axios\";\n\nconst FormAssistenza = ({\n  title,\n  subtitle,\n  icon\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  async function onSubmit(values) {\n    const valori = JSON.stringify(values);\n    console.log(valori);\n    let config = {\n      method: 'POST',\n      url: `${process.env.NEXT_PUBLIC_API_URL}/api/mail`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.parse(valori)\n    };\n\n    try {\n      const response = await axios(config);\n      console.log(response);\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  let msgerror = \"Campo Obbligatorio\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.containerForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.titleForm,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.iconForm,\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentForm,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"nome\",\n          label: \"Nome *\",\n          variant: \"outlined\",\n          helperText: !!errors.nome ? msgerror : null\n        }, register('nome', {\n          required: true\n        })), {}, {\n          error: !!errors.nome,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"cognome\",\n          label: \"Cognome *\",\n          variant: \"outlined\",\n          helperText: !!errors.cognome ? msgerror : null\n        }, register('cognome', {\n          required: true\n        })), {}, {\n          error: !!errors.cognome,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"azienda\",\n          label: \"Azienda *\",\n          variant: \"outlined\",\n          helperText: !!errors.azienda ? msgerror : null\n        }, register('azienda', {\n          required: true\n        })), {}, {\n          error: !!errors.azienda,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"email\",\n          label: \"Email *\",\n          variant: \"outlined\",\n          helperText: !!errors.email ? \"Inserire una email valida\" : null\n        }, register('email', {\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Inserire una email valida\"\n          }\n        })), {}, {\n          error: !!errors.email,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"oggetto\",\n          label: \"Oggetto *\",\n          variant: \"outlined\",\n          helperText: !!errors.oggetto ? msgerror : null\n        }, register('oggetto', {\n          required: true\n        })), {}, {\n          error: !!errors.oggetto,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, _objectSpread({\n          name: \"messaggio\",\n          placeholder: \"Messaggio *\",\n          className: `${classes.description} ${!!errors.messaggio && classes.errore}`\n        }, register('messaggio', {\n          required: true\n        })), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), !!errors.messaggio && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msgerror\",\n          children: msgerror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonArea,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"end\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 38\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" * Ho letto  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: '/terminiecondizioni',\n                children: \" la policy sulla privacy \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this),\n            labelPlacement: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nFormAssistenza.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  icon: PropTypes.string\n};\nexport default FormAssistenza;","map":{"version":3,"sources":["C:/Users/fraan/Documents/craonsite-modifiche_giugno/components/form-assistenza/form-assistenza.js"],"names":["React","PropTypes","classes","useForm","TextField","Button","FormControlLabel","TextareaAutosize","Checkbox","Link","axios","FormAssistenza","title","subtitle","icon","register","handleSubmit","formState","errors","onSubmit","values","valori","JSON","stringify","console","log","config","method","url","process","env","NEXT_PUBLIC_API_URL","headers","data","parse","response","error","msgerror","containerForm","headerForm","titleForm","iconForm","contentForm","nome","required","cognome","azienda","email","pattern","value","message","oggetto","description","messaggio","errore","buttonArea","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./form-assistenza.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"components/buttons/Button\";\nimport { FormControlLabel, TextareaAutosize, Checkbox } from \"@material-ui/core\";\n\nimport Link from 'next/link';\nimport axios from \"axios\";\n\nconst FormAssistenza = ({ title, subtitle, icon }) => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    async function onSubmit(values) {\n        const valori = JSON.stringify(values)\n        console.log(valori)\n \n        let config = {\n            method: 'POST',\n            url: `${process.env.NEXT_PUBLIC_API_URL}/api/mail`,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            data: JSON.parse(valori),\n\n        };\n  \n \n        try {\n          \n            const response = await axios(config);\n            console.log(response)\n\n        } catch (error) {\n            console.log('error', error)\n        }\n       \n    }\n\n\n\n    let msgerror = \"Campo Obbligatorio\";\n\n    return (\n        <div className={classes.containerForm}>\n            <div className={classes.headerForm}>\n                <div className={classes.titleForm} >\n                    <img className={classes.iconForm} src={icon}></img>\n                    {title}\n                </div>\n\n            </div>\n            <div className={classes.contentForm}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                    <TextField\n                        fullWidth\n                        name=\"nome\"\n                        label=\"Nome *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.nome) ? msgerror : null}\n                        {...register('nome', { required: true })}\n                        error={!!errors.nome}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"cognome\"\n                        label=\"Cognome *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.cognome) ? msgerror : null}\n                        {...register('cognome', { required: true })}\n                        error={!!errors.cognome}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"azienda\"\n                        label=\"Azienda *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.azienda) ? msgerror : null}\n                        {...register('azienda', { required: true })}\n                        error={!!errors.azienda}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"email\"\n                        label=\"Email *\"\n                        variant=\"outlined\"\n                        helperText={!!errors.email ? \"Inserire una email valida\" : null}\n                        {...register('email', {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: \"Inserire una email valida\",\n                            },\n                        })}\n                        error={!!errors.email}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"oggetto\"\n                        label=\"Oggetto *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.oggetto) ? msgerror : null}\n                        {...register('oggetto', { required: true })}\n                        error={!!errors.oggetto}\n                        className=\"textField\"\n\n                    />\n\n                    <TextareaAutosize\n\n                        name=\"messaggio\"\n                        placeholder=\"Messaggio *\"\n                        className={`${classes.description} ${!!errors.messaggio && classes.errore}`}\n                        {...register('messaggio', { required: true })}\n                    //defaultValue={data?.oggetto}\n                    />\n                    <br></br>\n                    {(!!errors.messaggio) && <div className=\"msgerror\" >{msgerror}</div>}\n                    <div className={classes.buttonArea}   >\n                        <FormControlLabel\n                            value=\"end\"\n                            control={<Checkbox color=\"primary\" />}\n                            label={\n                                <div>\n                                    <span> * Ho letto  </span>\n                                    <Link href={'/terminiecondizioni'}> la policy sulla privacy </Link>\n                                </div>\n                            }\n                            labelPlacement=\"end\"\n                        />\n\n\n                        <Button type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n\n};\n\nFormAssistenza.propTypes = {\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    icon: PropTypes.string,\n};\n\nexport default FormAssistenza;"]},"metadata":{},"sourceType":"module"}