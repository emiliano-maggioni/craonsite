{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fraan\\\\Documents\\\\craonsite-modifiche_giugno\\\\components\\\\context\\\\ToastContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useContext, useReducer } from 'react';\nconst ToastStateContext = /*#__PURE__*/createContext({\n  toasts: []\n});\nconst ToastDispatchContext = /*#__PURE__*/createContext(null);\n\nfunction ToastReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          toasts: [...state.toasts, action.toast]\n        });\n      }\n\n    case 'DELETE_TOAST':\n      {\n        const updatedToasts = state.toasts.filter(e => e.id != action.id);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          toasts: updatedToasts\n        });\n      }\n\n    default:\n      {\n        throw new Error('unhandled action type');\n      }\n  }\n}\n\nexport function ToastProvider({\n  children\n}) {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(ToastReducer, {\n    toasts: []\n  });\n  return /*#__PURE__*/_jsxDEV(ToastStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(ToastDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\nexport const useToastDispatchContext = () => useContext(ToastDispatchContext);\nexport const useToastStateContext = () => useContext(ToastStateContext);","map":{"version":3,"sources":["C:/Users/fraan/Documents/craonsite-modifiche_giugno/components/context/ToastContext.js"],"names":["createContext","useContext","useReducer","ToastStateContext","toasts","ToastDispatchContext","ToastReducer","state","action","type","toast","updatedToasts","filter","e","id","Error","ToastProvider","children","dispatch","useToastDispatchContext","useToastStateContext"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC;AAAEI,EAAAA,MAAM,EAAE;AAAV,CAAD,CAAvC;AACA,MAAMC,oBAAoB,gBAAGL,aAAa,CAAC,IAAD,CAA1C;;AAEA,SAASM,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AAAkB;AAChB,+CACKF,KADL;AAEEH,UAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,KAAzB;AAFV;AAID;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAMC,aAAa,GAAGJ,KAAK,CAACH,MAAN,CAAaQ,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,IAAQN,MAAM,CAACM,EAA1C,CAAtB;AACA,+CACKP,KADL;AAEEH,UAAAA,MAAM,EAAEO;AAFV;AAID;;AACD;AAAS;AACP,cAAM,IAAII,KAAJ,CAAU,uBAAV,CAAN;AACD;AAhBH;AAkBD;;AAED,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAC1C,QAAM;AAAA,OAACV,KAAD;AAAA,OAAQW;AAAR,MAAoBhB,UAAU,CAACI,YAAD,EAAe;AACjDF,IAAAA,MAAM,EAAE;AADyC,GAAf,CAApC;AAGA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEG,KAAnC;AAAA,2BACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAEW,QAAtC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;AAED,OAAO,MAAME,uBAAuB,GAAG,MAAMlB,UAAU,CAACI,oBAAD,CAAhD;AACP,OAAO,MAAMe,oBAAoB,GAAG,MAAMnB,UAAU,CAACE,iBAAD,CAA7C","sourcesContent":["import { createContext, useContext, useReducer } from 'react';\r\n\r\nconst ToastStateContext = createContext({ toasts: [] });\r\nconst ToastDispatchContext = createContext(null);\r\n\r\nfunction ToastReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TOAST': {\r\n      return {\r\n        ...state,\r\n        toasts: [...state.toasts, action.toast],\r\n      };\r\n    }\r\n    case 'DELETE_TOAST': {\r\n      const updatedToasts = state.toasts.filter((e) => e.id != action.id);\r\n      return {\r\n        ...state,\r\n        toasts: updatedToasts,\r\n      };\r\n    }\r\n    default: {\r\n      throw new Error('unhandled action type');\r\n    }\r\n  }\r\n}\r\n\r\nexport function ToastProvider({ children }) {\r\n  const [state, dispatch] = useReducer(ToastReducer, {\r\n    toasts: [],\r\n  });\r\n  return (\r\n    <ToastStateContext.Provider value={state}>\r\n      <ToastDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </ToastDispatchContext.Provider>\r\n    </ToastStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useToastDispatchContext = () => useContext(ToastDispatchContext);\r\nexport const useToastStateContext = () => useContext(ToastStateContext);"]},"metadata":{},"sourceType":"module"}