{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport classes from \"./form-assistenza.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"components/buttons/Button\";\nimport { FormControlLabel, TextareaAutosize, Checkbox } from \"@material-ui/core\";\nimport Link from 'next/link';\nimport axios from \"axios\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FormAssistenza = ({\n  title,\n  subtitle,\n  icon\n}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  async function onSubmit(values) {\n    console.log(values);\n    let config = {\n      method: 'POST',\n      url: `/api/mailer`,\n      headers: {\n        'Content-type': 'application/json'\n      },\n      data: values\n    }; // debugger\n\n    try {\n      const response = await axios(config); // debugger\n\n      if (response.status == 200) {\n        console.log('Success');\n        /*  toast.success('Email inviata correttamente. \\n Un nostro tecnico specialista la ricontatterà al più presto.', {\n              position: \"bottom-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n              */\n\n        alert('Email inviata correttamente. \\n Un nostro tecnico specialista la ricontatterà al più presto.');\n        reset();\n      } else {\n        alert('si è verificato un errore nell\\'invio della email. \\nPuò scrivereci all\\'indirizzo info@craon.it, \\noppure conttarci telefonicamente al 039.6612489.\\nCi scusiamo per il disagio.');\n      }\n\n      console.log('response', response);\n    } catch (error) {\n      console.log('errore', error);\n      alert('si è verificato un errore nell\\'invio della email. \\nPuò scrivereci all\\'indirizzo info@craon.it, \\noppure conttarci telefonicamente al 039.6612489.\\nCi scusiamo per il disagio.');\n    }\n  }\n\n  let msgerror = \"Campo Obbligatorio\";\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.containerForm,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.headerForm,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleForm,\n        children: [/*#__PURE__*/_jsx(\"img\", {\n          className: classes.iconForm,\n          src: icon\n        }), title]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.contentForm,\n      children: /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"nome\",\n          label: \"Nome *\",\n          variant: \"outlined\",\n          helperText: !!errors.nome ? msgerror : null\n        }, register('nome', {\n          required: true\n        })), {}, {\n          error: !!errors.nome,\n          className: \"textField\"\n        })), /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"cognome\",\n          label: \"Cognome *\",\n          variant: \"outlined\",\n          helperText: !!errors.cognome ? msgerror : null\n        }, register('cognome', {\n          required: true\n        })), {}, {\n          error: !!errors.cognome,\n          className: \"textField\"\n        })), /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"azienda\",\n          label: \"Azienda *\",\n          variant: \"outlined\",\n          helperText: !!errors.azienda ? msgerror : null\n        }, register('azienda', {\n          required: true\n        })), {}, {\n          error: !!errors.azienda,\n          className: \"textField\"\n        })), /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"email\",\n          label: \"Email *\",\n          variant: \"outlined\",\n          helperText: !!errors.email ? \"Inserire una email valida\" : null\n        }, register('email', {\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Inserire una email valida\"\n          }\n        })), {}, {\n          error: !!errors.email,\n          className: \"textField\"\n        })), /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"oggetto\",\n          label: \"Oggetto *\",\n          variant: \"outlined\",\n          helperText: !!errors.oggetto ? msgerror : null\n        }, register('oggetto', {\n          required: true\n        })), {}, {\n          error: !!errors.oggetto,\n          className: \"textField\"\n        })), /*#__PURE__*/_jsx(TextareaAutosize, _objectSpread({\n          name: \"messaggio\",\n          placeholder: \"Messaggio *\",\n          className: `${classes.description} ${!!errors.messaggio && classes.errore}`\n        }, register('messaggio', {\n          required: true\n        }))), /*#__PURE__*/_jsx(\"br\", {}), !!errors.messaggio && /*#__PURE__*/_jsx(\"div\", {\n          className: \"msgerror\",\n          children: msgerror\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.buttonArea,\n          children: [/*#__PURE__*/_jsx(FormControlLabel, {\n            value: \"end\",\n            control: /*#__PURE__*/_jsx(Checkbox, {\n              color: \"primary\"\n            }),\n            label: /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                children: \" * Ho letto  \"\n              }), /*#__PURE__*/_jsx(Link, {\n                href: '/terminiecondizioni',\n                children: \" la policy sulla privacy \"\n              })]\n            }),\n            labelPlacement: \"end\"\n          }), /*#__PURE__*/_jsx(Button, {\n            type: \"submit\"\n          })]\n        })]\n      })\n    })]\n  });\n};\n\nexport default FormAssistenza;","map":null,"metadata":{},"sourceType":"module"}