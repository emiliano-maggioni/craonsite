{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fraan\\\\Documents\\\\craonsite-modifiche_giugno\\\\components\\\\form-assistenza\\\\form-assistenza.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./form-assistenza.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"components/buttons/Button\";\nimport { FormControlLabel, TextareaAutosize, Checkbox } from \"@material-ui/core\";\nimport Link from 'next/link';\nimport axios from \"axios\";\n\nconst FormAssistenza = ({\n  title,\n  subtitle,\n  icon\n}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  async function onSubmit(values) {\n    fetch('/api/contact', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      res.status === 200 ? this.setState({\n        submitted: true\n      }) : '';\n    });\n  }\n\n  let msgerror = \"Campo Obbligatorio\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.containerForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.headerForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.titleForm,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.iconForm,\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentForm,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"nome\",\n          label: \"Nome *\",\n          variant: \"outlined\",\n          helperText: !!errors.nome ? msgerror : null\n        }, register('nome', {\n          required: true\n        })), {}, {\n          error: !!errors.nome,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"cognome\",\n          label: \"Cognome *\",\n          variant: \"outlined\",\n          helperText: !!errors.cognome ? msgerror : null\n        }, register('cognome', {\n          required: true\n        })), {}, {\n          error: !!errors.cognome,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"azienda\",\n          label: \"Azienda *\",\n          variant: \"outlined\",\n          helperText: !!errors.azienda ? msgerror : null\n        }, register('azienda', {\n          required: true\n        })), {}, {\n          error: !!errors.azienda,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"email\",\n          label: \"Email *\",\n          variant: \"outlined\",\n          helperText: !!errors.email ? \"Inserire una email valida\" : null\n        }, register('email', {\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: \"Inserire una email valida\"\n          }\n        })), {}, {\n          error: !!errors.email,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          fullWidth: true,\n          name: \"oggetto\",\n          label: \"Oggetto *\",\n          variant: \"outlined\",\n          helperText: !!errors.oggetto ? msgerror : null\n        }, register('oggetto', {\n          required: true\n        })), {}, {\n          error: !!errors.oggetto,\n          className: \"textField\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, _objectSpread({\n          name: \"messaggio\",\n          placeholder: \"Messaggio *\",\n          className: `${classes.description} ${!!errors.messaggio && classes.errore}`\n        }, register('messaggio', {\n          required: true\n        })), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), !!errors.messaggio && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msgerror\",\n          children: msgerror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonArea,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"end\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 38\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" * Ho letto  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: '/terminiecondizioni',\n                children: \" la policy sulla privacy \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this),\n            labelPlacement: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nFormAssistenza.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  icon: PropTypes.string\n};\nexport default FormAssistenza;","map":{"version":3,"sources":["C:/Users/fraan/Documents/craonsite-modifiche_giugno/components/form-assistenza/form-assistenza.js"],"names":["React","PropTypes","classes","useForm","TextField","Button","FormControlLabel","TextareaAutosize","Checkbox","Link","axios","FormAssistenza","title","subtitle","icon","register","handleSubmit","reset","formState","errors","onSubmit","values","fetch","method","headers","body","JSON","stringify","data","then","res","status","setState","submitted","msgerror","containerForm","headerForm","titleForm","iconForm","contentForm","nome","required","cognome","azienda","email","pattern","value","message","oggetto","description","messaggio","errore","buttonArea","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./form-assistenza.module.scss\";\nimport { useForm } from \"react-hook-form\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"components/buttons/Button\";\nimport { FormControlLabel, TextareaAutosize, Checkbox } from \"@material-ui/core\";\nimport Link from 'next/link';\nimport axios from \"axios\";\n\nconst FormAssistenza = ({ title, subtitle, icon }) => {\n \n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    async function onSubmit(values) {\n        fetch('/api/contact', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }).then((res) => {\n            res.status === 200 ? this.setState({ submitted: true }) : ''\n          })\n\n    }\n\n    let msgerror = \"Campo Obbligatorio\";\n\n    return (\n        <div className={classes.containerForm}>\n            <div className={classes.headerForm}>\n                <div className={classes.titleForm} >\n                    <img className={classes.iconForm} src={icon}></img>\n                    {title}\n                </div>\n\n            </div>\n            <div className={classes.contentForm}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                    <TextField\n                        fullWidth\n                        name=\"nome\"\n                        label=\"Nome *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.nome) ? msgerror : null}\n                        {...register('nome', { required: true })}\n                        error={!!errors.nome}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"cognome\"\n                        label=\"Cognome *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.cognome) ? msgerror : null}\n                        {...register('cognome', { required: true })}\n                        error={!!errors.cognome}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"azienda\"\n                        label=\"Azienda *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.azienda) ? msgerror : null}\n                        {...register('azienda', { required: true })}\n                        error={!!errors.azienda}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"email\"\n                        label=\"Email *\"\n                        variant=\"outlined\"\n                        helperText={!!errors.email ? \"Inserire una email valida\" : null}\n                        {...register('email', {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: \"Inserire una email valida\",\n                            },\n                        })}\n                        error={!!errors.email}\n                        className=\"textField\"\n\n                    />\n\n                    <TextField\n                        fullWidth\n                        name=\"oggetto\"\n                        label=\"Oggetto *\"\n                        variant=\"outlined\"\n                        helperText={(!!errors.oggetto) ? msgerror : null}\n                        {...register('oggetto', { required: true })}\n                        error={!!errors.oggetto}\n                        className=\"textField\"\n\n                    />\n\n                    <TextareaAutosize\n\n                        name=\"messaggio\"\n                        placeholder=\"Messaggio *\"\n                        className={`${classes.description} ${!!errors.messaggio && classes.errore}`}\n                        {...register('messaggio', { required: true })}\n                    //defaultValue={data?.oggetto}\n                    />\n                    <br></br>\n                    {(!!errors.messaggio) && <div className=\"msgerror\" >{msgerror}</div>}\n                    <div className={classes.buttonArea}   >\n                        <FormControlLabel\n                            value=\"end\"\n                            control={<Checkbox color=\"primary\" />}\n                            label={\n                                <div>\n                                    <span> * Ho letto  </span>\n                                    <Link href={'/terminiecondizioni'}> la policy sulla privacy </Link>\n                                </div>\n                            }\n                            labelPlacement=\"end\"\n                        />\n\n\n                        <Button type=\"submit\" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n\n};\n\nFormAssistenza.propTypes = {\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    icon: PropTypes.string,\n};\n\nexport default FormAssistenza;"]},"metadata":{},"sourceType":"module"}