{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js\";\nimport React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst InfoNumberText = ({\n  number,\n  text\n}) => {\n  const counters = document.querySelectorAll('.container');\n  const speed = 200;\n  counters.forEach(counter => {\n    const updateCount = () => {\n      const target = +counter.getAttribute('data-target');\n      const count = +counter.innerText; // Lower inc to slow and higher to slow\n\n      const inc = target / speed; // console.log(inc);\n      // console.log(count);\n      // Check if target is reached\n\n      if (count < target) {\n        // Add inc to count and output in counter\n        counter.innerText = count + inc; // Call function every ms\n\n        setTimeout(updateCount, 1);\n      } else {\n        counter.innerText = target;\n      }\n    };\n\n    updateCount();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.infoNumber,\n      \"data-target\": dataTarget,\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoText,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nInfoNumberText.propTypes = {\n  number: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  dataTarget: propTypes.string\n};\nexport default InfoNumberText;","map":{"version":3,"sources":["/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js"],"names":["React","classes","PropTypes","InfoNumberText","number","text","counters","document","querySelectorAll","speed","forEach","counter","updateCount","target","getAttribute","count","innerText","inc","setTimeout","container","infoNumber","dataTarget","infoText","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAoB;AACvC,QAAMC,QAAQ,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,CAAjB;AACA,QAAMC,KAAK,GAAG,GAAd;AAEAH,EAAAA,QAAQ,CAACI,OAAT,CAAiBC,OAAO,IAAI;AACxB,UAAMC,WAAW,GAAG,MAAM;AACtB,YAAMC,MAAM,GAAG,CAACF,OAAO,CAACG,YAAR,CAAqB,aAArB,CAAhB;AACA,YAAMC,KAAK,GAAG,CAACJ,OAAO,CAACK,SAAvB,CAFsB,CAItB;;AACA,YAAMC,GAAG,GAAGJ,MAAM,GAAGJ,KAArB,CALsB,CAOtB;AACA;AAEA;;AACA,UAAIM,KAAK,GAAGF,MAAZ,EAAoB;AAChB;AACAF,QAAAA,OAAO,CAACK,SAAR,GAAoBD,KAAK,GAAGE,GAA5B,CAFgB,CAGhB;;AACAC,QAAAA,UAAU,CAACN,WAAD,EAAc,CAAd,CAAV;AACH,OALD,MAKO;AACHD,QAAAA,OAAO,CAACK,SAAR,GAAoBH,MAApB;AACH;AACJ,KAnBD;;AAqBAD,IAAAA,WAAW;AACd,GAvBD;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACkB,SAAxB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAElB,OAAO,CAACmB,UAAvB;AAAmC,qBAAaC,UAAhD;AAAA,gBACEjB;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAM,MAAA,SAAS,EAAEH,OAAO,CAACqB,QAAzB;AAAA,gBAAoCjB;AAApC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAtCD;;AAwCAF,cAAc,CAACoB,SAAf,GAA2B;AACvBnB,EAAAA,MAAM,EAAEF,SAAS,CAACsB,MAAV,CAAiBC,UADF;AAEvBpB,EAAAA,IAAI,EAAEH,SAAS,CAACsB,MAAV,CAAiBC,UAFA;AAGvBJ,EAAAA,UAAU,EAAEE,SAAS,CAACC;AAHC,CAA3B;AAMA,eAAerB,cAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\"\nimport PropTypes from \"prop-types\";\n\n\nconst InfoNumberText = ({number, text}) => {\n    const counters = document.querySelectorAll('.container');\n    const speed = 200; \n    \n    counters.forEach(counter => {\n        const updateCount = () => {\n            const target = +counter.getAttribute('data-target');\n            const count = +counter.innerText;\n    \n            // Lower inc to slow and higher to slow\n            const inc = target / speed;\n    \n            // console.log(inc);\n            // console.log(count);\n    \n            // Check if target is reached\n            if (count < target) {\n                // Add inc to count and output in counter\n                counter.innerText = count + inc;\n                // Call function every ms\n                setTimeout(updateCount, 1);\n            } else {\n                counter.innerText = target;\n            }\n        };\n    \n        updateCount();\n    });\n    \n    return(\n        <div className={classes.container}>            \n            <h3 className={classes.infoNumber} data-target={dataTarget}>\n             {number}\n            </h3>\n            <div  className={classes.infoText}>{text}\n            </div>      \n        </div>\n    );\n}\n \nInfoNumberText.propTypes = {\n    number: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,  \n    dataTarget: propTypes.string,\n};\n\nexport default InfoNumberText;\n\n "]},"metadata":{},"sourceType":"module"}