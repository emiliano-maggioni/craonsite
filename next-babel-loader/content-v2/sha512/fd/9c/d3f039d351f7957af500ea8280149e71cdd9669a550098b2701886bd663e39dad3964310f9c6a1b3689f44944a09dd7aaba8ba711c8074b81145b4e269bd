{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js\",\n    _this = this;\n\nimport React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\";\nimport PropTypes from \"prop-types\";\nimport AnimatedNumber from \"animated-number-react\";\n\nvar InfoNumberText = function InfoNumberText(_ref) {\n  var plus = _ref.plus,\n      number = _ref.number,\n      percent = _ref.percent,\n      text = _ref.text;\n\n  function numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n\n    while (pattern.test(x)) {\n      x = x.replace(pattern, $1, $2);\n    }\n\n    return x;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.infoNumber,\n      children: [plus, /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n        value: number,\n        formatValue: function formatValue(number) {\n          return number.match(/.{1,3}/g).toFixed(0).toLocaleString('It');\n        },\n        duration: 3500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, _this), percent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoText,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = InfoNumberText;\nInfoNumberText.propTypes = {\n  number: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  plus: PropTypes.string,\n  percent: PropTypes.string\n};\nexport default InfoNumberText;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoNumberText\");","map":{"version":3,"sources":["/Users/francescogreco/Dropbox/Lavoro/Craon/Sito_nuovo/craonsite-main/components/info-number-text/InfoNumberText.js"],"names":["React","classes","PropTypes","AnimatedNumber","InfoNumberText","plus","number","percent","text","numberWithCommas","x","toString","pattern","test","replace","$1","$2","container","infoNumber","match","toFixed","toLocaleString","infoText","propTypes","string","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqC;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACxD,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBA,IAAAA,CAAC,GAAGA,CAAC,CAACC,QAAF,EAAJ;AACA,QAAIC,OAAO,GAAG,gBAAd;;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaH,CAAb,CAAP;AACIA,MAAAA,CAAC,GAAGA,CAAC,CAACI,OAAF,CAAUF,OAAV,EAAmBG,EAAnB,EAAsBC,EAAtB,CAAJ;AADJ;;AAEA,WAAON,CAAP;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACgB,SAAxB;AAAA,4BAEI;AAAI,MAAA,SAAS,EAAEhB,OAAO,CAACiB,UAAvB;AAAA,iBAAqCb,IAArC,eACI,QAAC,cAAD;AACI,QAAA,KAAK,EAAEC,MADX;AAEI,QAAA,WAAW,EAAE,qBAACA,MAAD;AAAA,iBAAYA,MAAM,CAACa,KAAP,CAAa,SAAb,EAAwBC,OAAxB,CAAgC,CAAhC,EAAmCC,cAAnC,CAAkD,IAAlD,CAAZ;AAAA,SAFjB;AAGI,QAAA,QAAQ,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,eADJ,EAOKd,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAYI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACqB,QAAxB;AAAA,gBAAmCd;AAAnC;AAAA;AAAA;AAAA;AAAA,aAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CA3BD;;KAAMJ,c;AA6BNA,cAAc,CAACmB,SAAf,GAA2B;AACvBjB,EAAAA,MAAM,EAAEJ,SAAS,CAACsB,MAAV,CAAiBC,UADF;AAEvBjB,EAAAA,IAAI,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UAFA;AAGvBpB,EAAAA,IAAI,EAAEH,SAAS,CAACsB,MAHO;AAIvBjB,EAAAA,OAAO,EAAEL,SAAS,CAACsB;AAJI,CAA3B;AAWA,eAAepB,cAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./InfoNumberText.module.scss\"\nimport PropTypes from \"prop-types\";\nimport AnimatedNumber from \"animated-number-react\";\n\n\nconst InfoNumberText = ({ plus, number, percent, text }) => {\n    function numberWithCommas(x) {\n        x = x.toString();\n        var pattern = /(-?\\d+)(\\d{3})/;\n        while (pattern.test(x))\n            x = x.replace(pattern, $1,$2);\n        return x;\n    }\n\n\n    return (\n        <div className={classes.container}>\n\n            <h3 className={classes.infoNumber} >{plus}\n                <AnimatedNumber\n                    value={number}\n                    formatValue={(number) => number.match(/.{1,3}/g).toFixed(0).toLocaleString('It')}\n                    duration={3500}\n\n                />\n                {percent}\n            </h3>\n\n            <div className={classes.infoText}>{text}\n            </div>\n        </div>\n    );\n}\n\nInfoNumberText.propTypes = {\n    number: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    plus: PropTypes.string,\n    percent: PropTypes.string,\n\n};\n\n\n\n\nexport default InfoNumberText;\n\n"]},"metadata":{},"sourceType":"module"}